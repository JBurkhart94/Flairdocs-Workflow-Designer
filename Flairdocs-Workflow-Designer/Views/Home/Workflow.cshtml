@model Flairdocs_Workflow_Designer.Models.Workflow


<div data-dojo-type="dijit/layout/BorderContainer" data-dojo-props="design:'sidebar', gutters:false, liveSplitters:true" id="borderContainer">



    <div data-dojo-type="dijit/layout/ContentPane" data-dojo-props="splitter:true, region:'top'" style="width: 100px; overflow-y: auto">
        <div id="flairdocs-banner">
            <img src="~/Content/flairsoft-logo.png" alt="Flairdocs" />
        </div>
        <div id="workflow-designer-top-wrapper">
            <div id="workflow-designer-menu">
                <select class="workflow-live-search" data-placeholder="Search Workflow">
                    <option></option>
                    @{
                        foreach (string title in ViewBag.Titles)
                        {
                            <option>@title</option>
                        }
                    }
                </select>
                <button id="open-workflow-button" type="button"><span class="glyphicon glyphicon-folder-open"></span>Open Workflow</button>
                <button id="create-workflow-button" type="button"><span class="glyphicon glyphicon-plus"></span>Create Workflow</button>
                <button id="workflow-audit-log-button" type="button"><span class="glyphicon glyphicon-list-alt"></span>Audit Log</button>
                <button id="workflow-settings-button" type="button"><span class="glyphicon glyphicon-cog"></span>Workflow Settings</button>
                <div id="workflow-description">
                    <i>@Model.Description</i>
                </div>
            </div>
            <div id="workflow-designer-window">
                <div id="workflow-designer-window-buttons">
                    <div id="add-reviewer-button"><span class="glyphicon glyphicon-move"></span>Drag to add Reviewer</div>
                    <button id="save-workflow-button" type="button"><span class="glyphicon glyphicon-floppy-disk" onclick="'@Url.Action("Save", "Home")'"></span>Save</button>
                </div>
                <div id="workflow-designer-window-edit">
                    @{
                        if (Model.Steps.Count() == 0)
                        {
                            <div class="workflow-step" value="00000000-0000-0000-0000-000000000000"></div>
                        }
                        else
                        {
                            foreach (var step in Model.Steps)
                            {
                                <div class="workflow-step" value="@step.Id"></div>
                            }
                        }
                    }

                    <div id="add-step-button" class="glyphicon glyphicon-chevron-right"></div>
                </div>
            </div>
        </div>
    </div>







    <div data-dojo-type="dijit/layout/ContentPane" data-dojo-props="splitter:true, region:'center'">

    </div>
</div>

<style>
    html, body {
        width: 100%;
        height: 100%;
        margin: 0;
    }

    #borderContainer {
        width: 100%;
        height: 100%;
        overflow: auto;
    }

    #workflow-description {
        width: 170px;
        margin-left: auto;
        margin-right: auto;
        margin-top: 15px;
        max-height: 100px;
        overflow: auto;
        font-weight: 100;
    }
    #add-reviewer-button {
        width: 10%;
    }
</style>

@Html.Partial("WorkflowScriptCommon")

<script>
    //Number of steps used for auto-scrolling feature
    var steps = @Model.Steps.Count();

    //Keep track of the amount of saves for enabling/disabling the save button
    var numOfSavesInProgress = 0;
    var inProgress = false;

    //Set up JavaScript event handlers
    $(document).ready(function () {
        //Create a workflow step
        $('#add-step-button').click(add_step);
        //Save a workflow
        $('#save-workflow-button').click(save_workflow);
        $('#add-reviewer-button').draggable({
            helper: "clone"
        });
        $('workflow-step').droppable({
            accepts: "#add-reviewer-button"
        });
    });

    /*
        Function to save the current workflow.  The method will use AJAX to save the current state of the workflow.  During the
        save process the save button should be disabled to prevent flooding the server with multiple save requests on the same
        unsaved state.  When the workflow is saved, the corresponding GUI elements on the page should be updated to reflect the
        state of the database. 
    */
    function save_workflow() {
        disable_button($('#save-workflow-button'));
        //Update the number of saves in progress, the save button will be re-enabled once this returns to 0.
        updateSavesInProgress($('.workflow-step').length);
        $('.workflow-step').each(function (index) {
            var el = $(this);
            var xhttp = new XMLHttpRequest();
            xhttp.open("POST", '@Url.Action("SaveStep", "Home")?workflowId=@Model.Id' + "&stepId=" + $(this).attr('value') + "&order=" + index, true);
            xhttp.send();
            xhttp.onreadystatechange = function () {
                if (xhttp.readyState == 4 && xhttp.status == 200) {
                    el.attr('value', xhttp.response);
                    el.promise().done(function () {
                        setTimeout(function () { updateSavesInProgress(-1) }, 10);
                    });
                }
            }
        });
    }

    /*
        Function to add a new step to the current workflow.  By default the step will have a value equivalent to the value of an Empty GUID.
        Also, the workflow-designer-window-edit should be auto-scrolled to the end.
    */
    function add_step(e) {
        //Update number of steps
        steps += 1;
        //Create new step with Empty GUID value.
        var code = '<div class="workflow-step" value="00000000-0000-0000-0000-000000000000"><ul class="sortable"><li>testing</li></ul></div >';

        //Insert this new step before the add step button
        $(code).insertBefore('#add-step-button');

        var tag = $('#workflow-designer-window-edit');
        //Auto-scroll
        tag.scrollLeft(350 * steps);
    }

    /*
        Function to keep track of the number of saves in progress.  This function acts as a synchronization function on the save button
        while still allowing the AJAX to perform asynchronously for saving the workflow.
    */
    function updateSavesInProgress(count) {
        numOfSavesInProgress += count;
        if (numOfSavesInProgress > 0) {
            disable_button($('#save-workflow-button'));
        } else {
            enable_button($('#save-workflow-button'));
        }
    }

    function disable_button(button) {
        button.prop("disabled", true);
        button.css("background-color", "#cecece");
    }

    function enable_button(button) {
        button.prop("disabled", false);
        button.css("background-color", "#5697ff");
    }

</script>
