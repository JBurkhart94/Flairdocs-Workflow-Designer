<div data-dojo-type="dijit/layout/BorderContainer" data-dojo-props="design:'sidebar', gutters:false, liveSplitters:true" id="borderContainer">





    <div data-dojo-type="dijit/layout/ContentPane" data-dojo-props="splitter:true, region:'top'" style="width: 100px; overflow-y: auto">
        <div id="flairdocs-banner">
            <img src="~/Content/flairsoft-logo.png" alt="Flairdocs" />
        </div>
        <div id="workflow-designer-top-wrapper">
            <div id="workflow-designer-menu">
                <select class="workflow-live-search" data-placeholder="Search Workflow">
                    <option></option>
                    @{
                        foreach (string title in ViewBag.Titles)
                        {
                            <option>@title</option>
                        }
                    }
                </select>
                <button id="open-workflow-button" type="button"><span class="glyphicon glyphicon-folder-open"></span>Open Workflow</button>
                <button id="create-workflow-button" type="button"><span class="glyphicon glyphicon-plus"></span>Create Workflow</button>
                <button id="workflow-audit-log-button" type="button"><span class="glyphicon glyphicon-list-alt"></span>Audit Log</button>
                <button id="workflow-settings-button" type="button"><span class="glyphicon glyphicon-cog"></span>Workflow Settings</button>
            </div>
            <div id="workflow-designer-window">
                <div id="workflow-designer-window-buttons">
                    <button id="add-reviewer-button" type="button"><span class="glyphicon glyphicon-move"></span>Drag to add Reviewer</button>
                    <button id="save-workflow-button" type="button"><span class="glyphicon glyphicon-floppy-disk"></span>Save</button>
                </div>
                <div id="workflow-designer-window-edit">


                </div>
            </div>
        </div>
    </div>







    <div data-dojo-type="dijit/layout/ContentPane" data-dojo-props="splitter:true, region:'center'">

    </div>
</div>


<style>
    html, body {
        width: 100%;
        height: 100%;
        margin: 0;
    }
    #borderContainer {
        width: 100%;
        height: 100%;
        overflow: auto;
    }
</style>

<script>
    require(["dojo/parser", "dijit/layout/ContentPane", "dijit/layout/BorderContainer"]);
    var steps = 0;
    var title = "default";
    var description = "default";

    $(document).ready(function () {
        $('#add-step-button').click(addStep);
        $('#create-workflow-button').click(create_work_flow);
        // select2 Setup
        $('.workflow-live-search').select2({
            val: null,
            allowClear: true,
            multiple: false,
            width: '200px',
            theme: 'classic',
            // used to toggle search box
            dropdownAutoWidth: true,
            closeOnSelect: true,
            //dropdownParent: $('.workflow-live-search')
        });
        // reset selection

        $('.workflow-live-search').val('').change();
        $("#open-workflow-button").click(open_workflow);
    });

    function open_workflow() {
        if ($('.workflow-live-search').select2('data')[0].text != "") {
            var xhttp = new XMLHttpRequest();
            xhttp.open("GET", '@Url.Action("WorkflowSearch", "Home")?title=' + $('.workflow-live-search').select2('data')[0].text, true);
            xhttp.send();
            xhttp.onreadystatechange = function () {
                if (xhttp.readyState == 4 && xhttp.status == 200 && xhttp.response != null) {
                      var url = '@Url.Action("Workflow", "Home")?id=' + xhttp.response;
                      window.location.href = url;
                }
            }
        }
    }

    function create_work_flow() {
        swal.setDefaults(
            {
                width: '30%',
                confirmButtonColor: '#2db300',
                cancelButtonColor: 'red',

            }
        );
        var q = [
            {
                progressSteps: ['1', '2'],
                showCancelButton: true,
                title: 'Workflow Title',
                input: 'text',
                confirmButtonText: 'Next',
                inputValidator: function (value) {
                    return new Promise(function (resolve, reject) {
                        if (value) {
                            var xhttp = new XMLHttpRequest();
                            xhttp.open("GET", '@Url.Action("TitleExists", "Home")?title=' + value, true);
                            xhttp.send();
                            xhttp.onreadystatechange = function () {
                                if (xhttp.readyState == 4 && xhttp.status == 200) {
                                    console.log(xhttp.response);
                                    if (xhttp.response == "False") {
                                        title = value;
                                        resolve();
                                    } else {
                                        reject("Workflow " + value + " already exists!");
                                    }

                                }
                            }
                        } else {
                            reject("Workflow title cannot be empty! ");
                        }
                    }
                    )
                }
            },
            {
                progressSteps: ['1', '2'],
                showCancelButton: true,
                title: 'Workflow Description',
                input: 'textarea',
                confirmButtonText: 'Done',
                inputValidator: function (value) {
                    return new Promise(function (resolve, reject) {
                        if (value) {
                            description = value;
                            resolve()
                        } else {
                            reject("Workflow Descriptions cannot be empty! ")
                        }
                    }
                    )
                }
            }
        ];
        swal.queue(q).then(function () {
            //Once successful, create the new workflow and redirect to its editable page
            var xhttp = new XMLHttpRequest();
            xhttp.open("POST", '@Url.Action("Create", "Home")?title=' + title + '&description=' + description, true);
            xhttp.send();
            xhttp.onreadystatechange = function () {
                if (xhttp.readyState == 4 && xhttp.status == 200 && xhttp.response != null) {
                    console.log("Received Response From Create: " + xhttp.response);
                    var url = '@Url.Action("Workflow", "Home")?id=' + xhttp.response;
                    console.log("Redirect url: " + url);
                    window.location.href = url;
                }
            }
        });

    }

    function addStep(e) {
        steps += 1;
        var code = '<div class="workflow-step"></div >';
        $(code).insertBefore('#add-step-button');
        var tag = $('#workflow-designer-window-edit');
        tag.scrollLeft(350 * steps);
        console.log("testing");
    }


    function resetWorkflow() {
        console.log("Resetting workflow");
        $("#workflow-designer-window-edit").html('<div id="add-step-button" class="glyphicon glyphicon-chevron-right"></div>');
        $('#add-step-button').click(addStep);
        addStep();
        steps = 1;
    }
</script>